{"version":3,"file":"aveworks-backstretch.min.js","sources":["../src/aveworks-backstretch.js"],"names":["angular","module","directive","$window","$timeout","restrict","scope","aveworksBackstretchImages","aveworksBackstretchDuration","aveworksBackstretchFade","link","element","attributes","images","duration","fade","transitionOnResize","styles","wrapper","left","top","overflow","margin","padding","height","width","zIndex","position","image","opacity","border","maxHeight","maxWidth","transition","css","append","$watch","newValue","oldValue","length","refreshImages","removeImageElements","find","index","hideWrapper","remove","timeoutPromise","cancel","Array","isArray","forEach","array","src","bind","load","e","ratio","this","resize","show","background_css","background_offset","root_width","offsetWidth","background_width","root_height","offsetHeight","background_height","i","children"],"mappings":"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","sourcesContent":["/*!\n * aveworks-backstretch\n * https://github.com/aveworks/aveworks-backstretch\n *\n * Copyright (c) 2015 Angelos Veglektsis\n * Licensed under the MIT license.\n */\nangular.module('aveworks.directives', []).\n\ndirective('aveworksBackstretch', ['$window', '$timeout', function($window, $timeout) {\n\treturn {\n\t\trestrict: 'A',\n\t\tscope: {\n\t\t\taveworksBackstretchImages: '=',\n\t\t\taveworksBackstretchDuration: '=',\n\t\t\taveworksBackstretchFade: '='\n\t\t},\n\t\tlink: function(scope, element, attributes) {\n\t\t\tvar images = [];\n\t\t\tvar duration = 5000;\n\t\t\tvar fade = 1;\n\n\t\t\tvar transitionOnResize = false;\n\n\t\t\t/* STYLES\n\t\t\t * \n\t\t\t * Baked-in styles that we'll apply to our elements.\n\t\t\t * In an effort to keep the plugin simple, these are not exposed as options.\n\t\t\t * That said, anyone can override these in their own stylesheet.\n\t\t\t * ========================= */\n\t\t\tvar styles = {\n\t\t\t\twrapper: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\theight: '100%',\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\tzIndex: -999998,\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t},\n\t\t\t\timage: {\n\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\topacity: 0,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 'none',\n\t\t\t\t\twidth: 'auto',\n\t\t\t\t\theight: 'auto',\n\t\t\t\t\tmaxHeight: 'none',\n\t\t\t\t\tmaxWidth: 'none',\n\t\t\t\t\tzIndex: -999999,\n\t\t\t\t\ttransition: 'all '+fade+'s'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// create the scope.wrapper element\n\t\t\tscope.wrapper = angular.element('<div class=\"aveworks-backstretch\"></div>');\n\t\t\tscope.wrapper.css(styles.wrapper);\n\t\t\telement.append(scope.wrapper);\n\n\t\t\tscope.$watch('aveworksBackstretchImages', function(newValue, oldValue) {\n\t\t\t\tif (newValue && newValue.length) {\n\t\t\t\t\tscope.refreshImages();\n\t\t\t\t} else {\n\t\t\t\t\tscope.removeImageElements(true);\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t\tscope.$watch('aveworksBackstretchDuration', function(newValue, oldValue) {\n\t\t\t\tif (typeof scope.aveworksBackstretchDuration == 'number' || typeof scope.aveworksBackstretchDuration == 'string' ) {\n\t\t\t\t\tduration = scope.aveworksBackstretchDuration | 0;\n\t\t\t\t}else{\n\t\t\t\t\tduration = 5000;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tscope.$watch('aveworksBackstretchFade', function(newValue, oldValue) {\n\t\t\t\tif (typeof scope.aveworksBackstretchFade == 'number' || typeof scope.aveworksBackstretchFade == 'string' ) {\n\t\t\t\t\t\tfade = scope.aveworksBackstretchFade | 0;\n\t\t\t\t}else{\n\t\t\t\t\t\tfade = 1;\n\t\t\t\t}\n\n\t\t\t\tstyles.image.transition = 'all ' + fade + 's';\n\t\t\t\tscope.wrapper.find(\"img\").css('transition', styles.image.transition);\n\t\t\t\t\n\t\t\t});\n\n\t\t\tscope.index = 0;\n\n\n\t\t\tscope.removeImageElements = function (hideWrapper) {\n\t\t\t\tscope.wrapper.find(\"img\").remove();\n\n\t\t\t\tif(timeoutPromise) {\n\t\t\t\t\t$timeout.cancel(timeoutPromise);\n\t\t\t\t\ttimeoutPromise = null;\n\t\t\t\t}\n\n\t\t\t\tif (hideWrapper) {\n\t\t\t\t\tscope.wrapper.css(\"display\", \"none\");\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tscope.refreshImages = function() {\n\t\t\t\timages = scope.aveworksBackstretchImages;\n\n\t\t\t\timages = Array.isArray(images) ? images : [images];\n\t\t\t\tduration = duration || 5000;\n\n\n\t\t\t\tif (images.length === 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\t/// remove all previous images\n\t\t\t\tscope.removeImageElements();\n\n\t\t\t\tscope.wrapper.css(\"display\", \"block\");\n\n\t\t\t\timages.forEach(function(element, index, array) {\n\t\t\t\t\tscope.image = angular.element('<img>');\n\t\t\t\t\tscope.image[0].src = element;\n\t\t\t\t\tscope.image.css(styles.image);\n\n\t\t\t\t\t// append these images to the wrapper\n\t\t\t\t\tscope.wrapper.append(scope.image);\n\n\t\t\t\t\t// Set the first image\n\t\t\t\t\tscope.index = 0;\n\n\t\t\t\t\t// don't do anything until the image has finished loading\n\t\t\t\t\tscope.image.bind('load', scope.load);\n\n\t\t\t\t});\n\t\t\t};\n\n\t\t\tscope.load = function(e) {\n\t\t\t\t// figure out what the width:height ratio is\n\t\t\t\tscope.ratio = this.width / this.height;\n\n\t\t\t\t// perform an initial sizing\n\t\t\t\tscope.resize();\n\n\t\t\t\t// display the first image\n\t\t\t\tscope.show();\n\t\t\t};\n\n\t\t\tscope.resize = function(e) {\n\t\t\t\t// set some default css\n\t\t\t\tvar background_css = {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\twidth: 'auto',\n\t\t\t\t\theight: 'auto',\n\t\t\t\t};\n\n\t\t\t\t//styles.image.transition = 'all ' + fade + 's';\n\t\t\t\tif(!transitionOnResize){\n\t\t\t\t\tscope.wrapper.find(\"img\").css('transition', 'all 0s');\n\t\t\t\t}\n\n\t\t\t\t// set some initial calculations\n\t\t\t\tvar root_width = element[0].offsetWidth,\n\t\t\t\t\tbackground_width = root_width,\n\n\t\t\t\t\troot_height = element[0].offsetHeight,\n\t\t\t\t\tbackground_height = background_width / scope.ratio,\n\n\t\t\t\t\tbackground_offset;\n\n\t\t\t\t// make adjustments based on image ratio\n\t\t\t\tif (background_height >= root_height) {\n\t\t\t\t\tbackground_offset = (background_height - root_height) / 2;\n\t\t\t\t\tbackground_css.top = '-' + background_offset + 'px';\n\n\t\t\t\t} else {\n\t\t\t\t\tbackground_height = root_height;\n\t\t\t\t\tbackground_width = background_height * scope.ratio;\n\t\t\t\t\tbackground_offset = (background_width - root_width) / 2;\n\n\t\t\t\t\tbackground_css.left = '-' + background_offset + 'px';\n\t\t\t\t}\n\n\t\t\t\t// set the css for the width and height\n\t\t\t\tbackground_css.width = background_width + 'px';\n\t\t\t\tbackground_css.height = background_height + 'px';\n\n\t\t\t\t// apply the appropriate styles to the wrapper and image\n\t\t\t\tscope.wrapper.css({\n\t\t\t\t\twidth: root_width,\n\t\t\t\t\theight: root_height\n\t\t\t\t});\n\n\t\t\t\tfor (var i = 0; i < scope.wrapper.children().length; i++) {\n\t\t\t\t//\tvar img = angular.element(scope.wrapper.children()[i]);\n\t\t\t\t//\timg.css(background_css);\n\t\t\t\t}\n\n\t\t\t\tscope.wrapper.find(\"img\").css(background_css);\n\n\t\t\t\tif(!transitionOnResize){\n\t\t\t\t\t$timeout(function(){\n\t\t\t\t\t\tscope.wrapper.find(\"img\").css('transition' , 'all ' + fade + 's');\n\t\t\t\t\t});\n\t\t\t\t}\n\n\n\t\t\t};\n\n\t\t\tvar timeoutPromise = null;\n\t\t\tscope.show = function() {\n\t\t\t\tif(timeoutPromise)return;\n\n\t\t\t\tvar element = scope.wrapper.children()[scope.index];\n\t\t\t\tscope.image = angular.element(element);\n\n\t\t\t\t// only one image\n\t\t\t\tscope.image.css({ opacity: 1 });\n\t\t\t\tconsole.log(scope.image , scope.image.css('opacity'));\n\n\t\t\t\tif (images.length === 1) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\n\t\t\t\t// hide it once the duration has been reached\n\t\t\t\ttimeoutPromise = $timeout(function() {\n\t\t\t\t\ttimeoutPromise = null;\n\n\t\t\t\t\tscope.image.css({\n\t\t\t\t\t\topacity: 0\n\t\t\t\t\t});\n\n\t\t\t\t\tscope.index++;\n\t\t\t\t\t// bring things back around once we've hit the end\n\t\t\t\t\tif (scope.index >= images.length) {\n\t\t\t\t\t\tscope.index = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.show();\n\t\t\t\t}, duration);\n\n\t\t\t};\n\n\t\t\tif (images && images.length) {\n\t\t\t\tscope.refreshImages();\n\t\t\t}\n\t\t\tangular.element($window).bind('resize', scope.resize);\n\t\t}\n\t};\n}]);"]}